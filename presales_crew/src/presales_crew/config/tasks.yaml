brief_interpretation_task:
  description: >
    Review the client brief provided in natural language and extract key information. 
    Structure your response to include the project overview, goals, users and stakeholders, known features, constraints, unknowns, risks, and recommended next steps for other agents.
    Identify any missing details or ambiguities and surface them clearly.
  expected_output: >
    A structured YAML object containing:
    - project_overview: title, client_goals, business_context
    - users_and_stakeholders: end_users, internal_stakeholders
    - known_features: a bullet list
    - constraints_and_requirements: tech, timeline, non_functionals
    - gaps_and_unknowns: questions or unclear areas
    - risks_and_assumptions: inferred risks or assumptions
    - recommended_next_steps: suggested follow-up actions and agents
  agent: brief_interpreter

user_persona_generation_task:
  description: >
    Use the client brief and the structured output from the Brief Interpreter Agent to create a set of realistic and relevant user personas.
    Each persona should include a name, role, background, goals, pain points, and behaviour patterns relevant to the project domain.
  expected_output: >
    A YAML list of user personas.
    Each persona should include:
      - name: fictional but realistic
      - role: job title or user type
      - background: short context of who they are
      - goals: what they want to achieve using the system
      - frustrations: typical pain points or blockers
      - behaviours: how they interact with digital systems
  agent: user_persona_creator
  context:
    - brief_interpretation_task

gap_analysis_task:
  description: >
    Review the client brief and the outputs from previous agents (such as the Brief Interpreter and User Persona Creator).
    Identify any information that is missing, ambiguous, contradictory, or based on unstated assumptions.
    For each gap, write a short description and a clear, specific follow-up question to ask the client or stakeholder team.
  expected_output: >
    A YAML list of gaps and questions.
    Each item should include:
      - gap: description of the missing or unclear information
      - follow_up_question: a targeted, actionable question to help resolve the gap
  agent: gap_identifier
  context:
    - brief_interpretation_task

epic_story_generation_task:
  description: >
    Use the output from the Brief Interpreter Agent and the User Persona Creator Agent to generate a list of Epics and User Story titles. 
    Epics should reflect major goals or user-facing capabilities. 
    User Story titles should be specific actions or features users need, mapped back to each Epic.
  expected_output: >
    A YAML object containing:
    - epics: 
        - title: a short, clear name
          description: (optional) summary of the value or capability
          user_stories:
            - title: user story title only (e.g., "As a tenant, I can book an appointment")
  agent: epic_story_generator
  context:
    - brief_interpretation_task
    - user_persona_generation_task
    - gap_analysis_task

slide_deck_generation_task:
  description: >
    Take the outputs of the discovery process — including the brief interpretation, personas, and gaps — and generate a structured slide deck outline.
    The deck should explain the project context, goals, users, features, risks, and open questions in a clear, logical order.
  expected_output: >
    A YAML list of slides.
    Each slide should include:
      - title: slide heading
      - bullets: key talking points
      - (optional) notes: speaker notes or elaboration for each slide
  agent: slide_creator
  context:
    - brief_interpretation_task
    - user_persona_generation_task
    - gap_analysis_task

process_flow_generation_task:
  description: >
    Use the structured output from the Brief Interpreter Agent, User Persona Creator, and Epic & Story Generator to create one or more Mermaid flowcharts.
    Focus on mapping key user or system journeys as linear or decision-based flows.
    Each diagram should be provided as Markdown-ready Mermaid code.
  expected_output: >
    A Markdown file containing:
    - One or more Mermaid diagrams (using ```mermaid blocks)
    - Each diagram should be titled and introduced with a short sentence
    - Diagrams must use Mermaid flowchart syntax (flowchart TD/LR, nodes, decisions, arrows, etc.)
  agent: process_flow_diagrammer
  context:
    - brief_interpretation_task
    - user_persona_generation_task
    - epic_story_generation_task
